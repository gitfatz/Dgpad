<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Articles with Video Chart</title>
    <script src="https://cdn.amcharts.com/lib/5/index.js"></script>
    <script src="https://cdn.amcharts.com/lib/5/xy.js"></script>
    <script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>
    <style>
        #chartdiv {
            width: 100%;
            height: 500px;
        }
    </style>
</head>
<body>
    <div id="chartdiv"></div>

    <script>
        am5.ready(async function () {
            var root = am5.Root.new("chartdiv");

            root.setThemes([am5themes_Animated.new(root)]);

            var chart = root.container.children.push(
                am5xy.XYChart.new(root, {
                    panX: false,
                    panY: false,
                    wheelX: "none",
                    wheelY: "none",
                    paddingLeft: 0,
                })
            );

            chart.zoomOutButton.set("forceHidden", true);

            var yRenderer = am5xy.AxisRendererY.new(root, {
                minGridDistance: 30,
                minorGridEnabled: true,
                inversed: true,
            });

            yRenderer.grid.template.set("location", 1);

            var yAxis = chart.yAxes.push(
                am5xy.CategoryAxis.new(root, {
                    maxDeviation: 0,
                    categoryField: "_id",
                    renderer: yRenderer,
                    tooltip: am5.Tooltip.new(root, { themeTags: ["axis"] }),
                })
            );

            var xAxis = chart.xAxes.push(
                am5xy.ValueAxis.new(root, {
                    maxDeviation: 0,
                    min: 1,
                    logarithmic: true,
                    numberFormatter: am5.NumberFormatter.new(root, {
                        numberFormat: "#,###a",
                    }),
                    extraMax: 0.1,
                    renderer: am5xy.AxisRendererX.new(root, {
                        strokeOpacity: 0.1,
                        minGridDistance: 80,
                    }),
                })
            );

            var series = chart.series.push(
                am5xy.ColumnSeries.new(root, {
                    name: "Series 1",
                    xAxis: xAxis,
                    yAxis: yAxis,
                    valueXField: "count",
                    categoryYField: "_id",
                    tooltip: am5.Tooltip.new(root, {
                        pointerOrientation: "left",
                        labelText: "{valueX}",
                    }),
                })
            );

            series.columns.template.setAll({
                cornerRadiusTR: 5,
                cornerRadiusBR: 5,
                strokeOpacity: 0,
            });

            series.columns.template.adapters.add("fill", function (fill, target) {
                return chart.get("colors").getIndex(series.columns.indexOf(target));
            });

            series.columns.template.adapters.add("stroke", function (stroke, target) {
                return chart.get("colors").getIndex(series.columns.indexOf(target));
            });

            async function getArticlesWithVideo() {
                const response = await fetch("http://127.0.0.1:5000/articles_with_video");
                const data = await response.json();
                return data;
            }

            async function getAllArticlesCount() {
                const response = await fetch("http://127.0.0.1:5000/articles_count");
                return await response.json();
            }

            let articles_with_video_count = (await getArticlesWithVideo()).length;
            let articles_without_video_count =
                (await getAllArticlesCount()) - articles_with_video_count;

            const data = [
                { _id: "Without Video", count: articles_without_video_count },
                { _id: "With Video", count: articles_with_video_count },
            ];

            yAxis.data.setAll(data);
            series.data.setAll(data);

            chart.set(
                "cursor",
                am5xy.XYCursor.new(root, {
                    behavior: "none",
                    xAxis: xAxis,
                    yAxis: yAxis,
                })
            );

            xAxis.children.push(
                am5.Label.new(root, {
                    text: "Articles Count",
                    fontSize: "1em",
                    fontWeight: "600",
                    fill: am5.color(0x555555),
                    x: am5.p50,
                    centerX: am5.p50,
                    centerY: am5.p100,
                    dy: 20,
                })
            );

            yAxis.children.unshift(
                am5.Label.new(root, {
                    text: "Article Type",
                    fontSize: "1em",
                    fontWeight: "600",
                    fill: am5.color(0x555555),
                    rotation: -90,
                    y: am5.p50,
                    centerY: am5.p50,
                    centerX: am5.p100,
                    dx: -30,
                })
            );

            series.appear(1000);
            chart.appear(1000, 100);
        });
    </script>
</body>
</html>
