<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Line Chart of Articles by Date</title>

  <!-- amCharts 5 core and xy chart library -->
  <script src="https://cdn.amcharts.com/lib/5/index.js"></script>
  <script src="https://cdn.amcharts.com/lib/5/xy.js"></script>
  <script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>

  <!-- Styles -->
  <style>
    #chartdiv {
      width: 100%;
      height: 500px;
    }
  </style>
</head>
<body>

  <!-- Chart container -->
  <div id="chartdiv"></div>

  <script>
    am5.ready(async function () {
      // Create root element
      var root = am5.Root.new("chartdiv");

      // Set themes
      root.setThemes([am5themes_Animated.new(root)]);

      // Create XY chart
      var chart = root.container.children.push(
        am5xy.XYChart.new(root, {
          panX: true,
          panY: true,
          wheelX: "panX",
          wheelY: "zoomX",
          pinchZoomX: true,
          paddingLeft: 0,
        })
      );

      // Set up cursor
      var cursor = chart.set(
        "cursor",
        am5xy.XYCursor.new(root, {
          behavior: "none",
        })
      );
      cursor.lineY.set("visible", false);

      // Create X axis (DateAxis)
      var xAxis = chart.xAxes.push(
        am5xy.DateAxis.new(root, {
          maxDeviation: 0.2,
          baseInterval: {
            timeUnit: "day",
            count: 1,
          },
          renderer: am5xy.AxisRendererX.new(root, {
            minorGridEnabled: true,
          }),
          tooltip: am5.Tooltip.new(root, {}),
        })
      );

      // Create Y axis (ValueAxis)
      var yAxis = chart.yAxes.push(
        am5xy.ValueAxis.new(root, {
          renderer: am5xy.AxisRendererY.new(root, {
            pan: "zoom",
          }),
        })
      );

      // Create LineSeries
      var series = chart.series.push(
        am5xy.LineSeries.new(root, {
          name: "Series",
          xAxis: xAxis,
          yAxis: yAxis,
          valueYField: "value",
          valueXField: "date",
          tooltip: am5.Tooltip.new(root, {
            labelText: "{valueY}",
          }),
        })
      );

      // Scrollbar
      chart.set(
        "scrollbarX",
        am5.Scrollbar.new(root, {
          orientation: "horizontal",
        })
      );

      // Add bullets (circles) to the line series
      series.bullets.push(function () {
        return am5.Bullet.new(root, {
          sprite: am5.Circle.new(root, {
            radius: 5,
            fill: series.get("fill"),
          }),
        });
      });

      // X-axis label
      xAxis.children.push(
        am5.Label.new(root, {
          text: "Date",
          fontSize: "1em",
          fontWeight: "600",
          fill: am5.color(0x555555),
          x: am5.p50,
          centerX: am5.p50,
          centerY: am5.p100,
          dy: 20,
        })
      );

      // Y-axis label
      yAxis.children.unshift(
        am5.Label.new(root, {
          text: "Articles Count",
          fontSize: "1em",
          fontWeight: "600",
          fill: am5.color(0x555555),
          rotation: -90,
          y: am5.p50,
          centerY: am5.p50,
          centerX: am5.p100,
          dx: -30,
        })
      );

      // Fetch data from the API
      async function getArticlesByDate() {
        const response = await fetch("http://127.0.0.1:5000/articles_by_date");
        const data = await response.json();

        // Convert dates to timestamps for the chart
        return data.map((article) => {
          const date = new Date(article._id).getTime(); // _id holds the date
          const value = article.count; // count holds the value
          return { date, value };
        });
      }

      // Set data to series
      const data = await getArticlesByDate();
      series.data.setAll(data);

      // Animate chart
      series.appear(1000);
      chart.appear(1000, 100);
    });
  </script>

</body>
</html>
