<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Word Count vs Articles Count Chart</title>

  <!-- amCharts 5 core and xy chart library -->
  <script src="https://cdn.amcharts.com/lib/5/index.js"></script>
  <script src="https://cdn.amcharts.com/lib/5/xy.js"></script>
  <script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>

  <!-- Styles -->
  <style>
    #chartdiv {
      width: 100%;
      height: 500px;
    }
  </style>
</head>
<body>

  <!-- Chart container -->
  <div id="chartdiv"></div>

  <script>
    am5.ready(async function () {
      // Create root element
      var root = am5.Root.new("chartdiv");

      // Set themes
      root.setThemes([am5themes_Animated.new(root)]);

      // Create XY chart
      var chart = root.container.children.push(
        am5xy.XYChart.new(root, {
          panX: true,
          panY: true,
          wheelX: "panX",
          wheelY: "zoomX",
          pinchZoomX: true,
          paddingLeft: 0,
          paddingRight: 1,
        })
      );

      // Create X-axis (Category Axis)
      var xAxis = chart.xAxes.push(
        am5xy.CategoryAxis.new(root, {
          maxDeviation: 0.3,
          categoryField: "_id",  // _id represents the word
          renderer: am5xy.AxisRendererX.new(root, {}),
          tooltip: am5.Tooltip.new(root, {}),
        })
      );

      // Create Y-axis (Value Axis)
      var yAxis = chart.yAxes.push(
        am5xy.ValueAxis.new(root, {
          renderer: am5xy.AxisRendererY.new(root, {}),
        })
      );

      // Create Column Series
      var series = chart.series.push(
        am5xy.ColumnSeries.new(root, {
          xAxis: xAxis,
          yAxis: yAxis,
          valueYField: "count",  // count represents the articles count
          categoryXField: "_id",
          tooltip: am5.Tooltip.new(root, {
            labelText: "{categoryX}: [bold]{valueY}[/]",  // Display word and count in tooltip
          }),
        })
      );

      // Set rounded corners for columns
      series.columns.template.setAll({
        cornerRadiusTL: 5,
        cornerRadiusTR: 5,
        strokeOpacity: 0,
      });

      // Assign color to columns based on index
      series.columns.template.adapters.add("fill", function (fill, target) {
        return chart.get("colors").getIndex(series.columns.indexOf(target));
      });

      series.columns.template.adapters.add("stroke", function (stroke, target) {
        return chart.get("colors").getIndex(series.columns.indexOf(target));
      });

      // Add X-axis label
      xAxis.children.push(
        am5.Label.new(root, {
          text: "Word Count",
          fontSize: "1em",
          fontWeight: "600",
          fill: am5.color(0x555555),
          x: am5.p50,
          centerX: am5.p50,
          centerY: am5.p100,
          dy: 20,
        })
      );

      // Add Y-axis label
      yAxis.children.unshift(
        am5.Label.new(root, {
          text: "Articles Count",
          fontSize: "1em",
          fontWeight: "600",
          fill: am5.color(0x555555),
          rotation: -90,
          y: am5.p50,
          centerY: am5.p50,
          centerX: am5.p100,
          dx: -30,
        })
      );

      // Fetch data from the API
      async function getArticlesByWordCount() {
        const response = await fetch("http://127.0.0.1:5000/articles_by_word_count");
        const data = await response.json();
        return data;
      }

      // Fetch and process data
      let data = await getArticlesByWordCount();
      if (data[0]._id == 0) {
        data.splice(0, 1);  // Remove unwanted data where _id == 0
      }

      // Set data to axes and series
      xAxis.data.setAll(data);
      series.data.setAll(data);

      // Enable chart cursor
      chart.set("cursor", am5xy.XYCursor.new(root, {}));

      // Animate the chart on load
      series.appear(1000);
      chart.appear(1000, 100);
    });
  </script>

</body>
</html>
