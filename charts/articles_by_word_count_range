<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Articles by Word Count Range</title>
    <!-- Include amCharts library and themes -->
    <script src="https://cdn.amcharts.com/lib/5/index.js"></script>
    <script src="https://cdn.amcharts.com/lib/5/xy.js"></script>
    <script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>
    <style>
        #chartdiv {
            width: 100%;
            height: 500px;
        }
    </style>
</head>
<body>

<div id="chartdiv"></div>

<script>
am5.ready(async function () {
  // Create the chart root container
  var root = am5.Root.new("chartdiv");

  // Apply the animated theme
  root.setThemes([am5themes_Animated.new(root)]);

  // Create an XY chart
  var chart = root.container.children.push(
    am5xy.XYChart.new(root, {
      panX: true,
      panY: true,
      wheelX: "panX",
      wheelY: "zoomX",
      pinchZoomX: true,
      paddingLeft: 0,
      paddingRight: 1,
    })
  );

  // Set up cursor behavior
  var cursor = chart.set("cursor", am5xy.XYCursor.new(root, {}));
  cursor.lineY.set("visible", false);

  // Configure the X axis (Category Axis)
  var xRenderer = am5xy.AxisRendererX.new(root, {
    minGridDistance: 30,
    minorGridEnabled: true,
  });

  xRenderer.labels.template.setAll({
    rotation: -90,
    centerY: am5.p50,
    centerX: am5.p100,
    paddingRight: 15,
  });

  xRenderer.grid.template.setAll({
    location: 1,
  });

  var xAxis = chart.xAxes.push(
    am5xy.CategoryAxis.new(root, {
      maxDeviation: 0.3,
      categoryField: "range",
      renderer: xRenderer,
      tooltip: am5.Tooltip.new(root, {}),
    })
  );

  // Configure the Y axis (Value Axis)
  var yRenderer = am5xy.AxisRendererY.new(root, {
    strokeOpacity: 0.1,
  });

  var yAxis = chart.yAxes.push(
    am5xy.ValueAxis.new(root, {
      maxDeviation: 0.3,
      renderer: yRenderer,
    })
  );

  // Create the column series
  var series = chart.series.push(
    am5xy.ColumnSeries.new(root, {
      name: "Series 1",
      xAxis: xAxis,
      yAxis: yAxis,
      valueYField: "count",
      sequencedInterpolation: true,
      categoryXField: "range",
      tooltip: am5.Tooltip.new(root, {
        labelText: "{valueY}",
      }),
    })
  );

  series.columns.template.setAll({
    cornerRadiusTL: 5,
    cornerRadiusTR: 5,
    strokeOpacity: 0,
  });

  series.columns.template.adapters.add("fill", function (fill, target) {
    return chart.get("colors").getIndex(series.columns.indexOf(target));
  });

  series.columns.template.adapters.add("stroke", function (stroke, target) {
    return chart.get("colors").getIndex(series.columns.indexOf(target));
  });

  // Variables for the bins and maximum word count
  let bins = 100;
  let max_word_count = 1000;

  // Fetch the longest article word count from the server
  async function getLongestArticleWordCount() {
    let response = await fetch("http://127.0.0.1:5000/longest_articles");
    let data = await response.json();
    return data[0].word_count;
  }

  // Update the max_word_count based on the fetched data
  max_word_count = await getLongestArticleWordCount();
  console.log(max_word_count);

  // Fetch articles grouped by word count range
  async function getArticlesByWordCountRange() {
    let range = 0;
    let articles_by_range = [];
    while (range < max_word_count) {
      let response = await fetch(
        `http://127.0.0.1:5000/articles_by_word_count_range/${range}/${range + bins}`
      );
      let data = await response.json();
      console.log(data.length);
      articles_by_range.push({
        range: `${range}-${range + bins}`,
        count: data.length,
      });
      range += bins;
    }
    return articles_by_range;
  }

  // Fetch and log the data
  let data = await getArticlesByWordCountRange();
  console.log(data);

  // Add labels for X and Y axes
  xAxis.children.push(
    am5.Label.new(root, {
      text: "Range",
      fontSize: "1em",
      fontWeight: "600",
      fill: am5.color(0x555555),
      x: am5.p50,
      centerX: am5.p50,
      centerY: am5.p100,
      dy: 20,
    })
  );

  yAxis.children.unshift(
    am5.Label.new(root, {
      text: "Articles Count",
      fontSize: "1em",
      fontWeight: "600",
      fill: am5.color(0x555555),
      rotation: -90,
      y: am5.p50,
      centerY: am5.p50,
      centerX: am5.p100,
      dx: -30,
    })
  );

  // Set the data for the chart
  xAxis.data.setAll(data);
  series.data.setAll(data);

  // Animate the appearance of the series and chart
  series.appear(1000);
  chart.appear(1000, 100);
});
</script>

</body>
</html>
