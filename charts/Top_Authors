<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bar Chart of Top Authors</title>

    <!-- amCharts 5 core and xy chart library -->
    <script src="https://cdn.amcharts.com/lib/5/index.js"></script>
    <script src="https://cdn.amcharts.com/lib/5/xy.js"></script>
    <script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>

    <!-- Styles -->
    <style>
        #chartdiv {
            width: 100%;
            height: 500px;
        }
    </style>
</head>
<body>

    <!-- Chart container -->
    <div id="chartdiv"></div>

    <script>
        am5.ready(async function() {

            // Create root element
            var root = am5.Root.new("chartdiv");

            // Set themes
            root.setThemes([am5themes_Animated.new(root)]);

            // Create chart
            var chart = root.container.children.push(am5xy.XYChart.new(root, {
                panX: false,
                panY: false,
                wheelX: "none",
                wheelY: "none",
                paddingLeft: 0
            }));

            // Hide zoom-out button during animation
            chart.zoomOutButton.set("forceHidden", true);

            // Create Y-axis (categories)
            var yRenderer = am5xy.AxisRendererY.new(root, {
                minGridDistance: 30,
                minorGridEnabled: true
            });
            yRenderer.grid.template.set("location", 1);

            var yAxis = chart.yAxes.push(am5xy.CategoryAxis.new(root, {
                maxDeviation: 0,
                categoryField: "_id",
                renderer: yRenderer,
                tooltip: am5.Tooltip.new(root, { themeTags: ["axis"] })
            }));

            // Create X-axis (values)
            var xAxis = chart.xAxes.push(am5xy.ValueAxis.new(root, {
                maxDeviation: 0,
                min: 0,
                numberFormatter: am5.NumberFormatter.new(root, {
                    "numberFormat": "#,###a"
                }),
                extraMax: 0.1,
                renderer: am5xy.AxisRendererX.new(root, {
                    strokeOpacity: 0.1,
                    minGridDistance: 80
                })
            }));

            // Create series (bar chart)
            var series = chart.series.push(am5xy.ColumnSeries.new(root, {
                name: "Top Authors",
                xAxis: xAxis,
                yAxis: yAxis,
                valueXField: "count",
                categoryYField: "_id",
                tooltip: am5.Tooltip.new(root, {
                    pointerOrientation: "left",
                    labelText: "{valueX}"
                })
            }));

            // Rounded corners for columns
            series.columns.template.setAll({
                cornerRadiusTR: 5,
                cornerRadiusBR: 5,
                strokeOpacity: 0
            });

            // Color each column differently
            series.columns.template.adapters.add("fill", function (fill, target) {
                return chart.get("colors").getIndex(series.columns.indexOf(target));
            });

            series.columns.template.adapters.add("stroke", function (stroke, target) {
                return chart.get("colors").getIndex(series.columns.indexOf(target));
            });

            // Fetch data from the API
            async function getTopAuthors(){
                const response = await fetch("http://127.0.0.1:5000/top_authors");
                const data = await response.json();
                return data;
            }

            const data = await getTopAuthors();
            data.reverse();  // Reverse data to show the highest values at the top

            // Set data to the axes and series
            yAxis.data.setAll(data);
            series.data.setAll(data);

            // Function to sort the category axis
            function sortCategoryAxis() {
                yAxis.dataItems.sort(function(a, b) {
                    return a.get("valueX") - b.get("valueX");
                });
            }

            sortCategoryAxis();

            // Enable chart cursor for interactions
            chart.set("cursor", am5xy.XYCursor.new(root, {
                behavior: "none",
                xAxis: xAxis,
                yAxis: yAxis
            }));

            // Make the chart animate on load
            series.appear(1000);
            chart.appear(1000, 100);

        }); // end am5.ready()
    </script>

</body>
</html>
